# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: SpringBoot CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B test --file pom.xml -Dskip.npm
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
#         cache: maven
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache node_modules repository
      uses: actions/cache@v2
      with:
        path: ./src/main/webapp/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Jar-Artifact
        path: ./target/Barber-Platform.jar  
  deploy:
    needs: [test, build]
    runs-on: self-hosted
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        timeout-minutes: 4
        with:
          name: Jar-Artifact
          path: Barber-Platform.jar
      - name: Copy Artifact
        uses: garygrossgarten/github-action-scp@release
        with:
          local: Barber-Platform.jar
          remote: ${{ secrets.DEPLOY_PATH }}
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          privateKey: ${{ secrets.ID_RSA }}
          port: ${{ secrets.SERVER_PORT }}
      - name: Run Docker
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          privateKey: ${{ secrets.ID_RSA }}
          command: |
            echo ${{ secrets.DEPLOY_PATH }}
            cd ${{ secrets.DEPLOY_PATH }}
            ls -lh
            sudo docker rm -f cicd-barberplatform
            sudo docker run -d --name cicd-barberplatform -p13000:8080 -v ${{ secrets.DEPLOY_PATH }}/Barber-Platform.jar:/Barber-Platform.jar openjdk:11-jre java -jar /Barber-Platform.jar

