# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
#     - name: Cache npm download cache
#       uses: actions/cache@v2
#       with:
#         path: ~/.npm
#         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-node-
    - name: Cache node_modules repository
      uses: actions/cache@v2
      with:
        path: ./src/webapp/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Jar-Artifact
        path: ./target/Barber-Platform.jar
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set Up SSH Environment
        env:
          private_key: ${{ secrets.ID_RSA }}
        run: |
          mkdir -p ~/.ssh/
          echo "$private_key" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          chmod 700 ~/.ssh && chmod 700 ~/.ssh/*
          ls -l ~/.ssh/
          ls -l ./
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Jar-Artifact
          path: ~/Barber-Platform.jar
      - name: test
        run: |
          ls -l ~/
      - name: scp
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ~/Barber-Platform.jar
          remote: ${{ secrets.DEPLOY_PATH }}
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          privateKey: ${{ secrets.ID_RSA }}
          port: ${{ secrets.SERVER_PORT }}
